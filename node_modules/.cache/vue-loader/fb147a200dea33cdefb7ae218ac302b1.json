{"remainingRequest":"/Users/austinmeadows/Git/school-loans/.yarn/$$virtual/vue-loader-virtual-675bffbb1e/0/cache/vue-loader-npm-15.9.5-092b2add56-7eabaade36.zip/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/austinmeadows/Git/school-loans/src/components/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/austinmeadows/Git/school-loans/src/components/Input.vue","mtime":1615144647599},{"path":"/Users/austinmeadows/Git/school-loans/.yarn/$$virtual/cache-loader-virtual-ac813ffeb9/0/cache/cache-loader-npm-4.1.0-82c3da90d8-2e369f72e3.zip/node_modules/cache-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/austinmeadows/Git/school-loans/.yarn/$$virtual/babel-loader-virtual-5e9184f3b1/0/cache/babel-loader-npm-8.2.2-b4e600c2c5-362bb71573.zip/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/austinmeadows/Git/school-loans/.yarn/$$virtual/cache-loader-virtual-ad33d86bba/0/cache/cache-loader-npm-4.1.0-82c3da90d8-2e369f72e3.zip/node_modules/cache-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/austinmeadows/Git/school-loans/.yarn/$$virtual/vue-loader-virtual-675bffbb1e/0/cache/vue-loader-npm-15.9.5-092b2add56-7eabaade36.zip/node_modules/vue-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMb2FkaW5nIGZyb20gInZ1ZS1sb2FkaW5nLW92ZXJsYXkiOwppbXBvcnQgInZ1ZS1sb2FkaW5nLW92ZXJsYXkvZGlzdC92dWUtbG9hZGluZy5jc3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmcsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFyc2VkQXV0b2NvbXBsZXRlKCkgewogICAgICAgIGlmICh0eXBlb2YgdGhpcy5hdXRvY29tcGxldGUgPT09ICJzdHJpbmciKSByZXR1cm4gdGhpcy5hdXRvY29tcGxldGU7CiAgICAgICAgaWYgKAogICAgICAgICAgdHlwZW9mIHRoaXMuYXV0b2NvbXBsZXRlID09PSAib2JqZWN0IiAmJgogICAgICAgICAgdGhpcy5hdXRvY29tcGxldGUgIT09IG51bGwKICAgICAgICApIHsKICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmF1dG9jb21wbGV0ZSkuZmlsdGVyKAogICAgICAgICAgICAoa2V5KSA9PiB0aGlzLmF1dG9jb21wbGV0ZVtrZXldCiAgICAgICAgICApWzBdOwogICAgICAgIH0KICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfSwKICAgIH07CiAgfSwKICBwcm9wczogewogICAgLyoKICAgICAgYXV0Y29tcGxldGUgYXR0cmlidXRlLCBpZiBuZWNlc3NhcnkKICAgICAgc2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm0tY29udHJvbC1pbmZyYXN0cnVjdHVyZS5odG1sI2F1dG9maWxsaW5nLWZvcm0tY29udHJvbHM6LXRoZS1hdXRvY29tcGxldGUtYXR0cmlidXRlCiAgICAqLwogICAgYXV0b2NvbXBsZXRlOiBbT2JqZWN0LCBTdHJpbmddLAogICAgLyoKICAgICAgbmFtZSBvZiBmb250LWF3ZXNvbWUgaWNvbiB0byB1c2UKICAgICovCiAgICBpY29uOiBTdHJpbmcsCiAgICAvKgogICAgICBpZiB0aGUgaW5wdXQgaXMgaGlkZGVuIG9yIG5vdC4KICAgICovCiAgICBpc0hpZGRlbjogewogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgdHlwZTogQm9vbGVhbiwKICAgIH0sCiAgICAvKgogICAgICAodXN1YWxseSBvbiBhIHN1Ym1pdCBidXR0b24pIGlmIGFuIGFjdGlvbiBpcyAibG9hZGluZyIgZHVlIHRvIGEgYnV0dG9uIHByZXNzCiAgICAqLwogICAgaXNMb2FkaW5nOiB7CiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICB0eXBlOiBCb29sZWFuLAogICAgfSwKICAgIC8qCiAgICAgIHRoZSB1bmlxdWUgbmFtZSBnaXZlbiB0byB0aGUgaW5wdXQKICAgICovCiAgICBuYW1lOiBTdHJpbmcsCiAgICAvKgogICAgICBwbGFjZWhvbGRlciB0ZXh0IGluIHRoZSB0ZXh0IGlucHV0CiAgICAqLwogICAgcGxhY2Vob2xkZXI6IFN0cmluZywKICAgIC8qCiAgICAgIHR5cGUgb2YgaW5wdXQKICAgICovCiAgICB0eXBlOiBTdHJpbmcsCiAgfSwKfTsK"},{"version":3,"sources":["Input.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Input.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport Loading from \"vue-loading-overlay\";\nimport \"vue-loading-overlay/dist/vue-loading.css\";\n\nexport default {\n  components: {\n    Loading,\n  },\n  data() {\n    return {\n      parsedAutocomplete() {\n        if (typeof this.autocomplete === \"string\") return this.autocomplete;\n        if (\n          typeof this.autocomplete === \"object\" &&\n          this.autocomplete !== null\n        ) {\n          return Object.keys(this.autocomplete).filter(\n            (key) => this.autocomplete[key]\n          )[0];\n        }\n        return null;\n      },\n    };\n  },\n  props: {\n    /*\n      autcomplete attribute, if necessary\n      see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute\n    */\n    autocomplete: [Object, String],\n    /*\n      name of font-awesome icon to use\n    */\n    icon: String,\n    /*\n      if the input is hidden or not.\n    */\n    isHidden: {\n      default: false,\n      type: Boolean,\n    },\n    /*\n      (usually on a submit button) if an action is \"loading\" due to a button press\n    */\n    isLoading: {\n      default: false,\n      type: Boolean,\n    },\n    /*\n      the unique name given to the input\n    */\n    name: String,\n    /*\n      placeholder text in the text input\n    */\n    placeholder: String,\n    /*\n      type of input\n    */\n    type: String,\n  },\n};\n</script>\n\n<template>\n  <div v-if=\"icon\" :class=\"['input-block', { hidden: isHidden }, type]\">\n    <label class=\"input-label\" :for=\"name\">\n      <loading\n        v-if=\"isLoading\"\n        loader=\"dots\"\n        :active.sync=\"isLoading\"\n        :is-full-page=\"false\"\n      ></loading>\n      <span class=\"input-placeholder\" v-if=\"type === 'checkbox'\">{{\n        placeholder\n      }}</span>\n      <input\n        :autocomplete=\"this.parsedAutocomplete()\"\n        class=\"input\"\n        :disabled=\"isHidden || isLoading\"\n        :id=\"name\"\n        @input=\"\n          $emit(\n            'input',\n            type === 'checkbox' ? $event.target.checked : $event.target.value\n          )\n        \"\n        :placeholder=\"placeholder\"\n        :type=\"type\"\n      />\n      <fa :icon=\"icon\" />\n    </label>\n  </div>\n  <input\n    v-else\n    :autocomplete=\"this.parsedAutocomplete()\"\n    class=\"input\"\n    :disabled=\"isHidden || isLoading\"\n    :id=\"name\"\n    @input=\"\n      $emit(\n        'input',\n        type === 'checkbox' ? $event.target.checked : $event.target.value\n      )\n    \"\n    :placeholder=\"placeholder\"\n    :type=\"type\"\n  />\n</template>\n\n<style lang=\"scss\">\n@import \"../utils/styles/animations\";\n@import \"../utils/styles/sizes\";\n@import \"../utils/styles/palette\";\n\n$label-font-size: $sizes-m;\n\n.input-block {\n  // this should just be large, it doesnt matter.\n  // used for transition\n  max-height: $label-font-size * 10;\n  opacity: 1;\n  overflow: hidden;\n  transition: $default-transition;\n\n  &.hidden {\n    opacity: 0;\n    max-height: 0;\n    user-select: none;\n  }\n\n  &.checkbox {\n    .input-placeholder,\n    svg {\n      cursor: pointer;\n      user-select: none;\n    }\n    svg {\n      margin: 0;\n      margin-right: $sizes-s;\n      order: 1;\n      position: initial;\n    }\n    .input-placeholder {\n      flex: 1;\n      order: 2;\n      text-align: left;\n    }\n    .input {\n      order: 3;\n    }\n    .input-label {\n      height: $label-font-size * 3 + $border-m;\n    }\n  }\n\n  .vld-overlay {\n    ~ .input {\n      pointer-events: none;\n    }\n    svg {\n      height: $label-font-size * 3;\n    }\n  }\n}\n\n.input-label {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n\n  > :last-child {\n    font-size: $label-font-size;\n    left: 0;\n    line-height: $label-font-size;\n    margin-left: $label-font-size + $border-m;\n    position: absolute;\n  }\n}\n\n.input {\n  border: 0;\n  border-radius: $label-font-size;\n  font-size: $label-font-size;\n  // sanitize/normalize.css seems to reset what we select.\n  font-family: \"Open Sans\", sans-serif;\n  line-height: $label-font-size;\n  margin: $sizes-s 0;\n  padding: $label-font-size $label-font-size $label-font-size $label-font-size +\n    (2 * $label-font-size);\n  width: 100%;\n  &::placeholder {\n    color: lighten($text, 40%);\n    line-height: normal;\n  }\n\n  &[type=\"text\"],\n  &[type=\"email\"],\n  &[type=\"password\"] {\n    border: $border-m solid $text;\n    transition: $default-transition;\n\n    + svg {\n      transition: $default-transition;\n    }\n    &:focus {\n      padding: $label-font-size $label-font-size * 2 $label-font-size\n        $label-font-size;\n      padding-right: $label-font-size;\n\n      + svg {\n        left: -$label-font-size * 2 - ($border-m * 3);\n      }\n    }\n  }\n\n  &[type=\"submit\"] {\n    color: lighten($primary, 40%);\n    cursor: pointer;\n    background: $primary;\n    padding: $label-font-size;\n\n    ~ svg {\n      color: lighten($primary, 40%);\n    }\n  }\n\n  &[type=\"checkbox\"] {\n    cursor: pointer;\n    height: $label-font-size * 3 - ($border-m * 5);\n    margin: 0;\n    padding: 1em;\n    position: relative;\n    visibility: hidden;\n    width: $label-font-size * 2 + $border-m * 2;\n\n    &:before {\n      border: $border-m solid $text;\n      content: \"\";\n      display: block;\n      padding: $label-font-size;\n      position: absolute;\n      right: 0;\n      top: $border-m;\n      transition: $default-transition;\n      visibility: visible;\n      z-index: 1;\n    }\n\n    &:checked {\n      &:before {\n        border-color: $primary;\n        border-right-style: none;\n        border-top-style: none;\n        padding-top: $label-font-size * 0.1;\n        top: $border-m * 4;\n        transform: rotate(-45deg);\n      }\n    }\n  }\n\n  // fix for mobile safari adding shadow\n  &:not([type=\"checkbox\"]):not([type=\"radio\"]) {\n    -webkit-appearance: none;\n  }\n}\n</style>\n"]}]}