{"remainingRequest":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/vue-loader-virtual-006ef79c4c/0/cache/vue-loader-npm-15.9.5-092b2add56-7eabaade36.zip/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/slowpoke/Git/school-loans/src/views/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/slowpoke/Git/school-loans/src/views/Login.vue","mtime":1608311096594},{"path":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/css-loader-virtual-2734afc69c/0/cache/css-loader-npm-3.6.0-3394f37d07-f916e1dc69.zip/node_modules/css-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/vue-loader-virtual-006ef79c4c/0/cache/vue-loader-npm-15.9.5-092b2add56-7eabaade36.zip/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":315532800000},{"path":"/Users/slowpoke/Git/school-loans/.yarn/cache/postcss-loader-npm-3.0.0-f4ab99b685-50b2d8892d.zip/node_modules/postcss-loader/src/index.js","mtime":315532800000},{"path":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/sass-loader-virtual-740c9a22b4/0/cache/sass-loader-npm-10.1.0-fa63f17146-f443dad79b.zip/node_modules/sass-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/cache-loader-virtual-933e938815/0/cache/cache-loader-npm-4.1.0-82c3da90d8-2e369f72e3.zip/node_modules/cache-loader/dist/cjs.js","mtime":315532800000},{"path":"/Users/slowpoke/Git/school-loans/.yarn/$$virtual/vue-loader-virtual-006ef79c4c/0/cache/vue-loader-npm-15.9.5-092b2add56-7eabaade36.zip/node_modules/vue-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi91dGlscy9zdHlsZXMvYW5pbWF0aW9ucyI7CkBpbXBvcnQgIi4uL3V0aWxzL3N0eWxlcy9wYWxldHRlIjsKQGltcG9ydCAiLi4vdXRpbHMvc3R5bGVzL3NpemVzIjsKCi5sb2dpbi1zd2l0Y2hlciB7CiAgbWFyZ2luLWJvdHRvbTogJHNpemVzLW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHVzZXItc2VsZWN0OiBub25lOwoKICA+ICogewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgcGFkZGluZzogMCAkc2l6ZXMteHM7CiAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uOwogIH0KCiAgLmhlYWRlcjpub3QoLmFjdGl2ZSkgewogICAgY29sb3I6ICR0ZXh0OwogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<script>\nimport { Heading, Input, Section } from \"../components\";\nimport { validate } from \"../utils/js\";\n\nexport default {\n  components: {\n    Heading,\n    Input,\n    Section,\n  },\n  data() {\n    return {\n      email: \"\",\n      emailConfirm: \"\",\n      formKind: \"loginForm\",\n      isHidden: true,\n      isLoading: false,\n      password: \"\",\n      passwordConfirm: \"\",\n    };\n  },\n  methods: {\n    checkForm(e) {\n      e.preventDefault();\n\n      this.isLoading = true;\n\n      const { email, emailConfirm, formKind, password, passwordConfirm } = this;\n      const errors = [];\n\n      if (!validate(\"email\", email)) {\n        errors.push(\"Invalid email.\");\n      }\n\n      // Validation checks specific to the Sign Up form\n      if (formKind === \"signUpForm\") {\n        if (password.length < 8) {\n          errors.push(\"Passwords must be at least 8 characters long.\");\n        } else if (password !== passwordConfirm) {\n          errors.push(\"Passwords don't match\");\n        }\n        if (email !== emailConfirm) {\n          errors.push(\"Emails don't match.\");\n        }\n      }\n\n      // If there are no validation errors, attempt to sign in\n      if (!errors.length) {\n        // Signup form action\n        if (formKind === \"signUpForm\") {\n          this.$store.dispatch(\"signUp\", { email, password });\n        }\n        // Login form action\n        if (formKind === \"loginForm\") {\n          this.$store.dispatch(\"signIn\", { email, password }).then((result) => {\n            if (!result) this.isLoading = false;\n          });\n        }\n      }\n      // If there are errors, show each of them.\n      else {\n        errors.forEach((error) => {\n          this.$toasted.show(error, { type: \"error\" });\n          this.isLoading = false;\n        });\n      }\n    },\n    onClickSwitcher(e) {\n      const selectedForm = e.target.parentNode.id;\n      if (this.formKind !== selectedForm) {\n        this.isHidden = !this.isHidden;\n        this.formKind = selectedForm;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div id=\"login\">\n    <Section>\n      <div class=\"login-switcher\">\n        <Heading :class=\"{ active: isHidden }\" id=\"loginForm\">\n          <a @click=\"onClickSwitcher\">Login</a>\n        </Heading>\n        <Heading :class=\"{ active: !isHidden }\" id=\"signUpForm\">\n          <a @click=\"onClickSwitcher\">Sign up</a>\n        </Heading>\n      </div>\n      <form\n        ref=\"form\"\n        @submit=\"checkForm\"\n        novalidate=\"true\"\n        autocomplete=\"true\"\n      >\n        <Input\n          autocomplete=\"email\"\n          icon=\"envelope\"\n          name=\"email\"\n          placeholder=\"Email\"\n          type=\"email\"\n          v-model=\"email\"\n        />\n        <Input\n          :isHidden=\"isHidden\"\n          autocomplete=\"email\"\n          icon=\"envelope\"\n          name=\"emailConfirm\"\n          placeholder=\"Confirm Email\"\n          ref=\"emailConfirm\"\n          type=\"email\"\n          v-model=\"emailConfirm\"\n        />\n        <Input\n          :autocomplete=\"{\n            'new-password': !isHidden,\n            'current-password': isHidden,\n          }\"\n          icon=\"key\"\n          name=\"password\"\n          placeholder=\"Password\"\n          type=\"password\"\n          v-model=\"password\"\n        />\n        <Input\n          :isHidden=\"isHidden\"\n          autocomplete=\"new-password\"\n          icon=\"key\"\n          name=\"passwordConfirm\"\n          placeholder=\"Confirm Password\"\n          ref=\"passwordConfirm\"\n          type=\"password\"\n          v-model=\"passwordConfirm\"\n        />\n        <Input\n          :isLoading=\"isLoading\"\n          icon=\"sign-in-alt\"\n          :placeholder=\"this.formKind === 'loginForm' ? 'Login' : 'Sign Up'\"\n          type=\"submit\"\n        />\n      </form>\n    </Section>\n  </div>\n</template>\n\n<style lang=\"scss\">\n@import \"../utils/styles/animations\";\n@import \"../utils/styles/palette\";\n@import \"../utils/styles/sizes\";\n\n.login-switcher {\n  margin-bottom: $sizes-m;\n  text-align: center;\n  user-select: none;\n\n  > * {\n    cursor: pointer;\n    display: inline-block;\n    padding: 0 $sizes-xs;\n    transition: $default-transition;\n  }\n\n  .header:not(.active) {\n    color: $text;\n    font-weight: normal;\n  }\n}\n</style>\n"]}]}